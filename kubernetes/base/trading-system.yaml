apiVersion: apps/v1
kind: Deployment
metadata:
  name: trading-bot-trading-system
  labels:
    app: trading-bot
    component: trading-system
spec:
  replicas: 1  # Only one instance of the trading system should run
  selector:
    matchLabels:
      app: trading-bot
      component: trading-system
  template:
    metadata:
      labels:
        app: trading-bot
        component: trading-system
    spec:
      containers:
      - name: trading-system
        image: ghcr.io/your-org/trading-bot-trading_system:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "2000m"
            memory: "2Gi"
        env:
        - name: LOG_LEVEL
          value: "INFO"
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: trading-bot-db-credentials
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: trading-bot-db-credentials
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: trading-bot-db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: trading-bot-db-credentials
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: trading-bot-db-credentials
              key: database
        - name: API_KEYS
          valueFrom:
            secretKeyRef:
              name: trading-bot-api-keys
              key: api_keys
        - name: TRADING_ENABLED
          value: "false"  # Default to disabled, must be explicitly enabled
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: data-volume
          mountPath: /app/data
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /readiness
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config-volume
        configMap:
          name: trading-bot-config
      - name: data-volume
        persistentVolumeClaim:
          claimName: trading-bot-data-pvc
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000 